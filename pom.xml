<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>jp.takeshi</groupId>
  <artifactId>junit5examples</artifactId>
  <version>0.0.1</version>
  <name>Junit5Examples</name>
  <description>Example codes for JUnit 5</description>

  <properties>
    <!-- Version declaration: -->
    <version.junit5.jupiter>5.4.2</version.junit5.jupiter>
    <version.junit5.platform>1.4.2</version.junit5.platform>
    <!-- 
    <version.openclover>4.3.1</version.openclover>
     -->
     <version.hamcrest>2.1</version.hamcrest>
  </properties>


  <dependencies>
    <!-- JUnit5 core packages -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${version.junit5.jupiter}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${version.junit5.jupiter}</version>
      <scope>test</scope>
    </dependency>
    <!-- to run test suites: -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-api</artifactId>
      <version>${version.junit5.platform}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>${version.junit5.platform}</version>
      <scope>test</scope>
    </dependency>

    <!-- Optional: for @ParameterizedTest -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${version.junit5.jupiter}</version>
      <scope>test</scope>
    </dependency>

    <!-- 3rd party: for assertThat() -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${version.hamcrest}</version>
      <scope>test</scope>
    </dependency>
    

  </dependencies>


  <build>
    <defaultGoal>clean test</defaultGoal>

    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>11</source>
          <target>11</target>
          <release>11</release><!-- workaround for Jdk11 -->
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M3</version>
        <configuration>
          <!-- (for antrun-plugin) DO NOT STOP test goal even if it fails; 
            this is for HTML report -->
          <testFailureIgnore>true</testFailureIgnore>
          <properties>
            <configurationParameters>
              junit.jupiter.extensions.autodetection.enabled = true
              junit.jupiter.testinstance.lifecycle.default = per_class
              junit.jupiter.execution.parallel.enabled = true
            </configurationParameters>
          </properties>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant-junit</artifactId>
            <version>1.10.5</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>html</id>
            <phase>test</phase>
            <configuration>
              <target>
                <ant antfile="build.xml" target="junit_report">
                  <property name="target.dir" value="${project.build.directory}"/>
                </ant>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
 
<!-- does not work 
      <plugin>
        <groupId>org.openclover</groupId>
        <artifactId>clover-maven-plugin</artifactId>
        <version>${version.openclover}</version>     
      </plugin>
 -->
    </plugins>
  </build>

</project>
